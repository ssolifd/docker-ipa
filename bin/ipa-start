#!/bin/bash

# Copyright 2014 Jan Pazdziora
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e

function usage () {
	if [ -n "$1" ] ; then
		echo $1 >&2
	else
		echo "Start as docker run -h \$FQDN_HOSTNAME -e PASSWORD=\$THE_ADMIN_PASSWORD image" >&2
	fi
	exit 1
}

function stop_running () {
	service dirsrv stop
	exit
}
trap exit TERM
trap stop_running EXIT

function update_server_ip_address () {
	kdestroy -A
	kinit -k
	(
		echo "server 127.0.0.1"
		echo "update delete $HOSTNAME_FQDN A"
		MY_IP=${IPA_SERVER_IP:-$( /sbin/ip addr show | awk '/inet .*global/ { split($2,a,"/"); print a[1]; }' | head -1 )}
		echo "update add $HOSTNAME_FQDN 180 A $MY_IP"
		echo "send"
		echo "quit"
	) | nsupdate -g
	kdestroy -A
}

chmod g+w /var/run /var/run/dbus

CAN_EDIT_RESOLV_CONF=0
cp -f /etc/resolv.conf /etc/resolv.conf.docker
if echo '# test access' >> /etc/resolv.conf || umount /etc/resolv.conf 2> /dev/null ; then
	CAN_EDIT_RESOLV_CONF=1
	cp -f /etc/resolv.conf.docker /etc/resolv.conf
fi

# vmvarela 
HOSTNAME_FQDN=$( hostname -f )
HOSTNAME_SHORT=${HOSTNAME_FQDN%%.*}
DOMAIN=${HOSTNAME_FQDN#*.}
if [ x"${REALM}" = "x" ]
then
	REALM=${DOMAIN^^}
fi

echo "
NETWORKING=yes
HOSTNAME=${HOSTNAME_FQDN}
" > /etc/sysconfig/network

#mkdir -p /var/log/pki-ca
#mkdir -p /var/log/dirsrv/slapd-PKI-IPA /var/log/dirsrv/slapd-${REALM}

if [ -f /etc/ipa/ca.crt ] ; then
	echo "FreeIPA server is already configured, starting the services."
	if [ "$CAN_EDIT_RESOLV_CONF" == "1" ] ; then
		if [ -f /etc/resolv.conf.ipa ] ; then
			perl -pe 's/^(nameserver).*/$1 127.0.0.1/' /etc/resolv.conf.ipa > /etc/resolv.conf
		fi
	fi
	find /var/run -name '*.pid' | xargs rm -f
	# Purge lock directories
	rm -rf /var/lock/dirsrv/slapd-*/*
	for s in messagebus sssd certmonger ipa ; do
		service $s start
	done
	while ! host $HOSTNAME_FQDN > /dev/null ; do
		sleep 5
	done
	update_server_ip_address
	host $HOSTNAME_FQDN
	echo "FreeIPA server started."
else
	if [ "$HOSTNAME_SHORT.$DOMAIN" != "$HOSTNAME_FQDN" ] ; then
		usage
	fi

	if [ -z "$PASSWORD" ] ; then
		usage
	fi

	DEBUG_OPT=
	if [ -n "$DEBUG" ] ; then
		DEBUG_OPT=-d
	fi

	if [ -z "$FORWARDER" ] ; then
		FORWARDER=$( awk '$1 == "nameserver" { print $2; exit }' /etc/resolv.conf )
	fi
	if [ "$FORWARDER" == '127.0.0.1' ] ; then
		FORWARDER=--no-forwarders
	else
		FORWARDER=--forwarder=$FORWARDER
	fi

	if [ "$CAN_EDIT_RESOLV_CONF" == "0" ] ; then
		find /usr -name bindinstance.py | xargs sed -i '/changing resolv.conf to point to ourselves/s/^/#/'
	fi

	if /usr/sbin/ipa-server-install -r $REALM -p $PASSWORD -a $PASSWORD -U $DEBUG_OPT --setup-dns $FORWARDER $IPA_SERVER_INSTALL_OPTS < /dev/null ; then
		sed -i 's/default_ccache_name/# default_ccache_name/' /etc/krb5.conf
		cp -f /etc/resolv.conf /etc/resolv.conf.ipa
		update_server_ip_address
		echo "FreeIPA server configured."
	else
		ret=$?
		echo "FreeIPA server configuration failed."
		exit $ret
	fi
fi

if [ -t 0 ] ; then
	echo 'Starting interactive shell.'
	/bin/bash
else
	echo 'Go loop.'
	while true ; do sleep 1000 & wait $! ; done
fi

